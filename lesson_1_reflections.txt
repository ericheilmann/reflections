How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I was able to focus only on the sections of code that changed.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It would give me a history of how I worked on the file and whether I changed the same
    code multiple times.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Allows you to save at logical check points and document your change history. Must be
    careful to save changes frequently enough to not lose work.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    When changing software code, a single feature change or bug fix may affect multiple
    files at the same time.

How can you use the commands git log and git diff to view the history of files?

    git log will show each commit along with date and comment, and git diff will show the
    changes between 2 commit numbers.

How might using version control make you more confident to make changes that
could break something?

    By using git diff you can always go back and figure out what code changes were made at 
    any time. Worst case, you can go back to the last working version and start over from
    there.

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here